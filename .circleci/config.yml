---
version: 2

references:
  repo_cache_key: &repo_cache_key
    v1-jackdaw-{{ .Branch }}-{{ .Revision }}

  repo_cache_backup_1: &repo_cache_backup_1
    v1-jackdaw-{{ .Branch }}

  repo_cache_backup_2: &repo_cache_backup_2
    v1-jackdaw

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - *repo_cache_key
        - *repo_cache_backup_1
        - *repo_cache_backup_2

  mvn_cache_key: &mvn_cache_key
    v1-jackdaw-deps-{{ checksum "project.clj" }}

  mvn_cache_backup: &mvn_cache_backup
    v1-jackdaw-deps

  restore_mvn: &restore_mvn
    restore_cache:
      keys:
        - *mvn_cache_key
        - *mvn_cache_backup

  build_config: &build_config
    docker:
      - image: circleci/clojure:lein-2.8.1
    working_directory: /home/circleci/jackdaw

  deploy_config: &deploy_config
    docker:
      - image: circleci/clojure:lein-2.8.1
    working_directory: /home/circleci/jackdaw

  test_config: &test_config
    docker:
      - image: circleci/clojure:lein-2.8.1
      - image: confluentinc/cp-zookeeper:5.1.0
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
      - image: confluentinc/cp-kafka:5.1.0
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      - image: confluentinc/cp-schema-registry:5.1.0
        environment:
          SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: localhost:2181
          SCHEMA_REGISTRY_HOST_NAME: localhost
          SCHEMA_REGISTRY_LISTENERS: http://localhost:8081
      - image: confluentinc/cp-kafka-rest:5.1.0
        environment:
          KAFKA_REST_ZOOKEEPER_CONNECT: localhost:2181
          KAFKA_REST_LISTENERS: http://0.0.0.0:8082
          KAFKA_REST_SCHEMA_REGISTRY: http://localhost:8081
          KAFKA_REST_HOST_NAME: localhost
    working_directory: ~/jackdaw

jobs:
  checkout_code:
    <<: *build_config
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-jackdaw-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
  checkout_tags:
    <<: *deploy_config
    steps:
      - *restore_repo
      # Temporary workaround for https://discuss.circleci.com/t/22437
      - run: |
          if [ -n "$CIRCLE_TAG" ]
          then
            mkdir -p ~/.ssh
            echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' \
              >> ~/.ssh/known_hosts
            git fetch --force origin "refs/tags/${CIRCLE_TAG}:refs/tags/${CIRCLE_TAG}"
          fi
      - checkout
      - save_cache:
          key: v1-jackdaw-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
  deps:
    <<: *build_config
    steps:
      - *restore_repo
      - *restore_mvn
      - run:
          lein with-profiles +test deps
      - save_cache:
          key: *mvn_cache_key
          paths:
            - /home/circleci/.m2
  test:
    <<: *test_config
    steps:
      - *restore_repo
      - *restore_mvn
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          lein with-profile +test cloverage --codecov
      - store_artifacts:
          path: ./logs
      - store_artifacts:
          path: target/coverage
      - store_test_results:
          path: target/test-results
      - run:
          name: Report Test Coverage
          command: bash <(curl -s https://codecov.io/bash)

  deploy:
    <<: *deploy_config
    steps:
      - *restore_repo
      - *restore_mvn
      - run:
          name: Prepare signing key
          command: |
            gpg --yes --batch --import /home/circleci/jackdaw/.circleci/fundingcirclebot.key

      - run:
          name: Deploy to Clojars
          command: |
            export LEIN_GPG=/home/circleci/jackdaw/.circleci/bin/gpg
            export REAL_GPG=$(which gpg)

            lein do jar, pom, deploy clojars
workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - deps:
          context: org-global
          requires:
            - checkout_code
      - test:
          context: org-global
          requires:
            - deps

  checkout_and_deploy:
    jobs:
      - checkout_tags:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy:
          context: org-global
          requires:
            - checkout_tags
          filters:
            tags:
              only: /^\d+\.\d+\.\d+.*$/
            branches:
              ignore: /.*/
